from contextlib import contextmanager

@contextmanager
def load_function(name):
    func_name = f"kmc:int/load/{name}"
    function func_name:
        yield

    append function_tag minecraft:load {
        "values": [
            func_name
        ]
    }

def tick_function(name):
    func_name = f"kmc:int/tick/{name}"
    function func_name:
        yield

    append function_tag minecraft:tick {
        "values": [
            func_name
        ]
    }

def parse_name(name):
    # Find colon
    colon_index = name.find(':')

    parsed_name = {}
    if colon_index == -1:
        parsed_name.update({"namespace":"minecraft"})
    else:
        parsed_name.update({"namespace":name[:colon_index]})

    parsed_name.update({"name":name[colon_index + 1:]})
    return parsed_name